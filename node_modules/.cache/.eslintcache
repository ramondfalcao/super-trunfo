[{"/home/ramond/Documentos/projetos-geral/super-trunfo/src/index.js":"1","/home/ramond/Documentos/projetos-geral/super-trunfo/src/App.js":"2","/home/ramond/Documentos/projetos-geral/super-trunfo/src/components/Form.js":"3","/home/ramond/Documentos/projetos-geral/super-trunfo/src/components/Card.js":"4","/home/ramond/Documentos/projetos-geral/super-trunfo/src/components/CardList.js":"5","/home/ramond/Documentos/projetos-geral/super-trunfo/src/components/CardSearch.js":"6"},{"size":220,"mtime":1645637370485,"results":"7","hashOfConfig":"8"},{"size":5681,"mtime":1646511717581,"results":"9","hashOfConfig":"8"},{"size":4330,"mtime":1646238181209,"results":"10","hashOfConfig":"8"},{"size":1509,"mtime":1646331263474,"results":"11","hashOfConfig":"8"},{"size":1413,"mtime":1646322985459,"results":"12","hashOfConfig":"8"},{"size":599,"mtime":1646511915231,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vebly9",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ramond/Documentos/projetos-geral/super-trunfo/src/index.js",[],[],"/home/ramond/Documentos/projetos-geral/super-trunfo/src/App.js",["33"],[],"import React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport CardList from './components/CardList';\n// import CardSearch from './components/CardSearch';\nimport './app.css'\nimport CardSearch from './components/CardSearch';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      enableButton: false,\n      cardList: [],\n      search: '',\n      isSaveButtonDisabled: true,\n      buttonDark: false,\n    };\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onSaveButtonClick = this.onSaveButtonClick.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.buttonDelete = this.buttonDelete.bind(this);\n    this.searchCard = this.searchCard.bind(this);\n  }\n\n  onInputChange({ target }) {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({ [name]: value }, this.validateForm);\n  }\n\n  onSaveButtonClick(event) {\n    event.preventDefault();\n\n    const newCard = { ...this.state };\n\n    this.setState((prevState) => ({\n      cardList: [...prevState.cardList, newCard],\n      hasTrunfo: [...prevState.cardList, newCard].some((card) => card.cardTrunfo),\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n    }));\n\n    localStorage.setItem(\"mykey\", event);\n  }\n\n  validateForm() {\n    const {\n      cardName,\n      cardDescription,\n      cardImage,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n    } = this.state;\n\n    const limit = 210;\n    const limitPoints = 90;\n    const sum = parseInt(cardAttr1, 10)\n    + parseInt(cardAttr2, 10)\n    + parseInt(cardAttr3, 10);\n\n    const checkedInputsNumbers = () => {\n      if (\n        sum <= limit\n        && parseInt(cardAttr1, 10) <= limitPoints\n        && parseInt(cardAttr2, 10) <= limitPoints\n        && parseInt(cardAttr3, 10) <= limitPoints\n        && parseInt(cardAttr1, 10) >= 0\n        && parseInt(cardAttr2, 10) >= 0\n        && parseInt(cardAttr3, 10) >= 0\n      ) return true;\n    };\n\n    const inputsFields = [cardName, cardDescription, cardImage];\n    const isNotEmpty = inputsFields.every((input) => input !== '');\n\n    const isFormValid = checkedInputsNumbers() && isNotEmpty;\n\n    if (isFormValid) {\n      this.setState({ isSaveButtonDisabled: false });\n    } else {\n      this.setState({ isSaveButtonDisabled: true });\n    }\n  }\n\n  buttonDelete({ target }) {\n    const { cardList } = this.state;\n    const name = target.value;\n    const filterCard = (cardList.filter((el) => el.cardName !== name));\n    console.log(filterCard);\n    this.setState(() => ({\n      cardList: filterCard,\n      hasTrunfo: filterCard.some((card) => card.cardTrunfo),\n    }));\n  }\n\n  searchCard({ target }) {\n    const { cardList } = this.state;\n    console.log(target.value);\n    const inputLowerCase = target.value.toLowerCase();\n    const result = cardList.filter(({ cardName }) => {\n      const nameLowerCase = cardName.toLowerCase();\n      return nameLowerCase.includes(inputLowerCase);\n    });\n\n    this.setState({\n      [target.name]: target.value,\n      filter: result,\n    });\n  }\n\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      cardList,\n      enableButton,\n      isSaveButtonDisabled,\n      buttonDelete,\n      search,\n    } = this.state;\n    return (\n      <main>\n        <header className=\"header\">\n          <h1>Tryunfo</h1>\n          <img className=\"logo\" src=\"https://cdn-icons-png.flaticon.com/512/4072/4072251.png\"/>\n        </header>\n        <section className=\"main-container\">\n          <section className=\"form-container\">\n            <Form\n              cardName={ cardName }\n              cardDescription={ cardDescription }\n              cardAttr1={ cardAttr1 }\n              cardAttr2={ cardAttr2 }\n              cardAttr3={ cardAttr3 }\n              cardImage={ cardImage }\n              cardRare={ cardRare }\n              cardTrunfo={ cardTrunfo }\n              hasTrunfo={ hasTrunfo }\n              isSaveButtonDisabled={ isSaveButtonDisabled }\n              onSaveButtonClick={ this.onSaveButtonClick }\n              onInputChange={ this.onInputChange }\n            />\n          </section>\n          <aside className=\"preview-container\">\n            <Card\n              classImg=\"img\"\n              cardName={ cardName }\n              cardDescription={ cardDescription }\n              cardAttr1={ cardAttr1 }\n              cardAttr2={ cardAttr2 }\n              cardAttr3={ cardAttr3 }\n              cardImage={ cardImage }\n              cardRare={ cardRare }\n              cardTrunfo={ cardTrunfo }\n              enableButton={ enableButton }\n              buttonDelete={ buttonDelete }\n            />\n          </aside>\n        </section>\n        <div className=\"search\">\n          <CardSearch\n            searchCard={ this.searchCard }\n            search={ search }\n          />\n        </div>\n        <section className=\"list-container\">\n          <CardList\n            cardList={ cardList }\n            cardName={ cardName }\n            cardTrunfo={ cardTrunfo }\n            enableButton={ enableButton }\n            buttonDelete={ this.buttonDelete }\n          />\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","/home/ramond/Documentos/projetos-geral/super-trunfo/src/components/Form.js",[],[],"/home/ramond/Documentos/projetos-geral/super-trunfo/src/components/Card.js",[],[],"/home/ramond/Documentos/projetos-geral/super-trunfo/src/components/CardList.js",[],[],"/home/ramond/Documentos/projetos-geral/super-trunfo/src/components/CardSearch.js",[],[],{"ruleId":"34","severity":1,"message":"35","line":151,"column":11,"nodeType":"36","endLine":151,"endColumn":96},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]